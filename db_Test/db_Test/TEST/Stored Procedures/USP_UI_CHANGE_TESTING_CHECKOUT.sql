



CREATE PROCEDURE [TEST].[USP_UI_CHANGE_TESTING_CHECKOUT]
	@CHECK_IN_DESC VARCHAR(200),
	@RTN INT = Null OUTPUT

AS

	SET NOCOUNT ON

	DECLARE @LAST_UPDT_BY varchar(50) = SYSTEM_USER
	DECLARE @CHECK_IN_DTE DATETIME = GETDATE()
	DECLARE @X AS INT


	BEGIN TRY
		BEGIN

			UPDATE TEST.TESTING_CHECKLOUT
			SET CHECK_IN_DTE = @CHECK_IN_DTE, CHECK_IN_BY = @LAST_UPDT_BY, CHECK_IN_DESC = @CHECK_IN_DESC, LAST_UPDT_DTE = @CHECK_IN_DTE, LAST_UPDT_BY=  @LAST_UPDT_BY, IS_CLOSED_IND = 1
			WHERE IS_CLOSED_IND IS NULL OR IS_CLOSED_IND = 0

			SET @RTN = 1
			RETURN @RTN --Positive Return
		END
	END TRY
	BEGIN CATCH
		 DECLARE @ProcName AS NVARCHAR(128) = ISNULL(ERROR_PROCEDURE(), 'UNKNOWN');
		 DECLARE @ER_PLAT as VARCHAR(128) = 'MSSQL DB ENGINE'
		 DECLARE @ER_NBR AS INTEGER = ISNULL(ERROR_NUMBER(),0)
		 DECLARE @ER_LINE AS INTEGER = ISNULL(ERROR_LINE(),0)
		 DECLARE @ER_SEV AS INTEGER = ISNULL(ERROR_SEVERITY(),0)
		 DECLARE @ER_ST AS INTEGER = ISNULL(ERROR_STATE(),0)
		 DECLARE @ER_MSG AS NVARCHAR(4000) = ISNULL(ERROR_MESSAGE(), 'A MESSAGE WAS NOT PROVIDED');
		 DECLARE @ER_USR AS VARCHAR(255) = ISNULL(CURRENT_USER, 'UNKONWN')

		 EXECUTE @RTN =  AM.USP_ERR_LOG @ProcName, @ER_PLAT, @ER_NBR, @ER_LINE, @ER_SEV, @ER_ST,@ER_MSG, @ER_USR	
		 RETURN @RTN --Returns LOG_ID From [AM].[PROCEDURE_ERROR_LOG]  as a negitive integer
	END CATCH;





