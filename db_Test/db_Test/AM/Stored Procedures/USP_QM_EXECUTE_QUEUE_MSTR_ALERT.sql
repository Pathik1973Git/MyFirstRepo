
CREATE PROCEDURE [AM].[USP_QM_EXECUTE_QUEUE_MSTR_ALERT]
	@ART_CTRL_MASTER_ID INTEGER,			--<=Required
	@RTN INT = Null OUTPUT		--<=OPTIONAL (DO NOT SEND)
AS
	DECLARE @BATCH_DATE AS DATE
	DECLARE @ART_NAME AS VARCHAR(100)
	DECLARE @LOAD_ID AS INT
	DECLARE @SCHED AS INT	
	DECLARE @DOES_ROW_EXIST AS BIT
	DECLARE @ALERT_MSG AS VARCHAR(5000)
	

	BEGIN TRY
		BEGIN
			-- SET VARIABLES
			SELECT @SCHED = A.SCHEDULE_TYPE_VALUE_ID, @LOAD_ID = A.LAST_LOAD_ID, @ART_NAME = A.ART_NME 
			FROM AM.ARTIFACT_CTRL_MASTER A WHERE A.ART_CTRL_MASTER_ID = @ART_CTRL_MASTER_ID

			-- SET BATCH DATE
			SET @BATCH_DATE = (SELECT CAST(MAX(A.BATCH_DTE) AS DATE)  FROM AM.BATCH_CTRL_MASTER A WHERE A.SCHEDULE_TYPE_VALUE_ID = @SCHED)

			
			--CREATE THE ERROR MESSAGE - CAN'T HAVE RETURN CHARACTERS OR SPLUNK WILL HAVE AN ERROR READING THIS MESSAGE.
			SET @ALERT_MSG = CONCAT('Custom Message - There was a problem executing the  ', @ART_NAME,'.dtsx ', 'package .  This package needs to be either executed manually, it cannot be executed in the context of the AM Platform in its current state. This is usually caused by an underlying data issue, please check the corresponding fields on the AM.ARTFACT table for Folder, Project, and Artifact Name. This are critical fields to properly executing the package properly via AM.USP_EXECUTE_SSIS_PACKAGE.  Otherwise this package will need to be debugged through the AM.USP_EXECUTE_SSIS_PACKAGE, to find the specific reason this package failed. || Please run ', @ART_NAME,'.dtsx ', 'manually (preferably through the SSIS DB')


			--CHECKS TO MAKE SURE THAT THE ARTIFACT ID DOESN'T AREADY EXIST FOR TODAYS BATCH DATE. 
			SET @DOES_ROW_EXIST = IIF((SELECT COUNT(1) FROM AM.ALERTS WHERE BATCH_DATE = @BATCH_DATE AND ART_CTRL_MASTER_ID = @ART_CTRL_MASTER_ID) > 0,1,0)

			--CREATE ALERT
			IF @DOES_ROW_EXIST = 0 
				BEGIN
					INSERT INTO AM.ALERTS(LOAD_ID, EXECUTION_ID, BATCH_DATE,ART_TYPE_DESC, ALERT_PRIORITY,ALERT_CONTEXT
					,ART_CTRL_MASTER_ID , ARTIFACT_NAME, RETRY_COUNT, RETRY_THRESHOLD,ERROR_MSG, MSG_SOURCE, CREATED_DTE,MSG_UPDATED_DTE)
							
					 VALUES(@LOAD_ID, 0, @BATCH_DATE, 'Package', 'Critical', concat('Error Executing Package ', @ART_NAME,'.dtsx') 
							,@ART_CTRL_MASTER_ID, @ART_NAME, 0, 0, @ALERT_MSG, 'CUSTOM', GETDATE(), GETDATE())
				END 

			SET @RTN = 1
			RETURN @RTN --Positive Return
		END
	END TRY
		BEGIN CATCH
			 DECLARE @ProcName AS NVARCHAR(128) = ISNULL(ERROR_PROCEDURE(), 'UNKNOWN');
			 DECLARE @ER_PLAT as VARCHAR(128) = 'MSSQL DB ENGINE'
			 DECLARE @ER_NBR AS INTEGER = ISNULL(ERROR_NUMBER(),0)
			 DECLARE @ER_LINE AS INTEGER = ISNULL(ERROR_LINE(),0)
			 DECLARE @ER_SEV AS INTEGER = ISNULL(ERROR_SEVERITY(),0)
			 DECLARE @ER_ST AS INTEGER = ISNULL(ERROR_STATE(),0)
			 DECLARE @ER_MSG AS NVARCHAR(4000) = ISNULL(ERROR_MESSAGE(), 'A MESSAGE WAS NOT PROVIDED');
			 DECLARE @ER_USR AS VARCHAR(255) = ISNULL(CURRENT_USER, 'UNKONWN')

			 EXECUTE @RTN =  AM.USP_ERR_LOG @ProcName, @ER_PLAT, @ER_NBR, @ER_LINE, @ER_SEV, @ER_ST,@ER_MSG, @ER_USR	
			 RETURN @RTN --Returns LOG_ID From [AM].[PROCEDURE_ERROR_LOG]  as a negitive integer
		END CATCH;



