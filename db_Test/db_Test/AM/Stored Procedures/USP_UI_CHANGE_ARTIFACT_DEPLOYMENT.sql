
CREATE PROCEDURE [AM].[USP_UI_CHANGE_ARTIFACT_DEPLOYMENT]
	@ART_DEPLOYMENT_ID INTEGER,
	@ART_CTRL_MASTER_ID INTEGER = NULL,
	@ART_DEPLOYMENT_PATH VARCHAR(400) = NULL,
	@ART_FOLDER_VALUE_ID INT = NULL,
	@ART_PROJECT_VALUE_ID INT = NULL,
	@DEPLOYMENT_COMMENTS VARCHAR(1000) = NULL,
	@ART_VALIDATED BIT = NULL,
	@RTN AS INT = NULL OUTPUT
	
AS
	
	SET NOCOUNT ON
	
	BEGIN TRY
		DECLARE @LAST_UPDT_DTE DATETIME = GETDATE()
		DECLARE @LAST_UPDT_BY VARCHAR(50) = SYSTEM_USER
		DECLARE @SQL_STR NVARCHAR(4000)
		DECLARE @PARMDEF NVARCHAR(1000)
		DECLARE @x INTEGER
		DECLARE @Y AS INTEGER


		SET @X = (SELECT COUNT(ART_DEPLOYMENT_ID) FROM AM.ARTIFACT_DEPLOYMENT WHERE ART_DEPLOYMENT_ID = @ART_DEPLOYMENT_ID)
		IF @X <> 1
			BEGIN 
				RAISERROR ('No matching records found with this ART_DEPLOYMENT_ID' ,16, 1)
			END
		SET @x = 0

		SET @SQL_STR = N'UPDATE AM.ARTIFACT_DEPLOYMENT SET '
		IF @ART_CTRL_MASTER_ID IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'ART_CTRL_MASTER_ID = @ART_CTRL_MASTER_ID, ' SET @X = @X  + 1 END
		IF @ART_DEPLOYMENT_PATH IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'ART_DEPLOYMENT_PATH = @ART_DEPLOYMENT_PATH, ' SET @X = @X  + 1 END
		IF @ART_FOLDER_VALUE_ID IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'ART_FOLDER_VALUE_ID = @ART_FOLDER_VALUE_ID, ' SET @X = @X  + 1 END
		IF @ART_PROJECT_VALUE_ID IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'ART_PROJECT_VALUE_ID = @ART_PROJECT_VALUE_ID, ' SET @X = @X  + 1 END
		IF @ART_VALIDATED IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'ART_VALIDATED = @ART_VALIDATED, ' SET @X = @X  + 1 END
		IF @DEPLOYMENT_COMMENTS IS NOT NULL BEGIN SET @SQL_STR = @SQL_STR + N'DEPLOYMENT_COMMENTS = @DEPLOYMENT_COMMENTS, ' SET @X = @X  + 1 END

		If @X = 0
			BEGIN 
				--Raise Error
				RAISERROR ('You must update at least one field',16,1)
			END

		SET @SQL_STR = @SQL_STR + N'LAST_UPDT_DTE = @LAST_UPDT_DTE, '
		SET @SQL_STR = @SQL_STR + N'LAST_UPDT_BY = @LAST_UPDT_BY '
		SET @SQL_STR = @SQL_STR + N'WHERE ART_DEPLOYMENT_ID = @ART_DEPLOYMENT_ID'

				
		SET @PARMDEF = N'@ART_DEPLOYMENT_ID INTEGER, @ART_CTRL_MASTER_ID INTEGER,  @ART_DEPLOYMENT_PATH VARCHAR(400),
							@ART_FOLDER_VALUE_ID INT, @ART_PROJECT_VALUE_ID INT, 
						@ART_VALIDATED BIT, @DEPLOYMENT_COMMENTS VARCHAR(1000), @LAST_UPDT_DTE DATETIME, @LAST_UPDT_BY VARCHAR(50)'

		Execute  sp_executesql @SQL_STR, @PARMDEF, 
				@ART_DEPLOYMENT_ID = @ART_DEPLOYMENT_ID,
				@ART_CTRL_MASTER_ID = @ART_CTRL_MASTER_ID,
				@ART_DEPLOYMENT_PATH = @ART_DEPLOYMENT_PATH,
				@ART_FOLDER_VALUE_ID = @ART_FOLDER_VALUE_ID,
				@ART_PROJECT_VALUE_ID = @ART_PROJECT_VALUE_ID, 
				@ART_VALIDATED = @ART_VALIDATED,
				@DEPLOYMENT_COMMENTS = @DEPLOYMENT_COMMENTS,
				@LAST_UPDT_DTE = @LAST_UPDT_DTE,
				@LAST_UPDT_BY = @LAST_UPDT_BY

			SET @RTN = 1
			RETURN @RTN --Positive Return
	END TRY
	
	BEGIN CATCH
		 DECLARE @ProcName AS NVARCHAR(128) = ISNULL(ERROR_PROCEDURE(), 'UNKNOWN');
		 DECLARE @ER_PLAT as VARCHAR(128) = 'MSSQL DB ENGINE'
		 DECLARE @ER_NBR AS INTEGER = ISNULL(ERROR_NUMBER(),0)
		 DECLARE @ER_LINE AS INTEGER = ISNULL(ERROR_LINE(),0)
		 DECLARE @ER_SEV AS INTEGER = ISNULL(ERROR_SEVERITY(),0)
		 DECLARE @ER_ST AS INTEGER = ISNULL(ERROR_STATE(),0)
		 DECLARE @ER_MSG AS NVARCHAR(4000) = ISNULL(ERROR_MESSAGE(), 'A MESSAGE WAS NOT PROVIDED');
		 DECLARE @ER_USR AS VARCHAR(255) = ISNULL(CURRENT_USER, 'UNKONWN')

		 EXECUTE @RTN =  AM.USP_ERR_LOG @ProcName, @ER_PLAT, @ER_NBR, @ER_LINE, @ER_SEV, @ER_ST,@ER_MSG, @ER_USR	
		 RETURN @RTN --Returns LOG_ID From [AM].[PROCEDURE_ERROR_LOG]  as a negitive integer
		 Rollback
	END CATCH;






