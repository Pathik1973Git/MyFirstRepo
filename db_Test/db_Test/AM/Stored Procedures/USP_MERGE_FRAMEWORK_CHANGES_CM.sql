CREATE PROCEDURE [AM].[USP_MERGE_FRAMEWORK_CHANGES_CM]
@CHANGE_ID INT,
@CHANGE_LOAD_ID INT
AS

BEGIN 

SET IDENTITY_INSERT CHG.CHANGE_MASTER ON 

MERGE INTO CHG.CHANGE_MASTER AS target
USING
(SELECT * 
FROM  [CHG].[STAGE_CHANGE_MASTER]
 WHERE  CHG_ID = @CHANGE_ID AND LAST_CHG_LOAD_ID = @CHANGE_LOAD_ID ) AS source
  ON  (target.CHG_ID = source.CHG_ID)

  WHEN MATCHED THEN
 UPDATE SET
 --target.CHG_ID = source.CHG_ID,
target.CHG_OPEN_DATE  = source.CHG_OPEN_DATE ,
target.CHG_CLOSE_DATE  = GETDATE() , --current date
target.CHG_OWNER  = source.CHG_OWNER ,
target.CHG_DESCRIPTION = source.CHG_DESCRIPTION,
target.LAST_CHG_LOAD_ID  = source.LAST_CHG_LOAD_ID ,
target.LAST_STATUS_CODE_VALUE_ID  = source.LAST_STATUS_CODE_VALUE_ID ,
target.LAST_PROCESS_DATETIME  = source.LAST_PROCESS_DATETIME ,
target.LAST_SOURCE_NME = source.LAST_SOURCE_NME,
target.LAST_TARGET_NME = source.LAST_TARGET_NME,
target.LAST_MESSAGE  = source.LAST_MESSAGE ,
target.IS_ACTIVE_IND = source.IS_ACTIVE_IND,
target.CREATED_DTE  = source.CREATED_DTE ,
target.CREATED_BY = source.CREATED_BY,
target.LAST_UPDT_DTE  = getdate(), --current date
target.LAST_UPDT_BY = CURRENT_USER, -- current user
target.LAST_ARC_CHG_LOAD_ID = @CHANGE_LOAD_ID

WHEN NOT MATCHED BY TARGET THEN        
INSERT(CHG_ID,CHG_OPEN_DATE ,CHG_CLOSE_DATE ,CHG_OWNER ,CHG_DESCRIPTION,LAST_CHG_LOAD_ID ,LAST_STATUS_CODE_VALUE_ID ,LAST_PROCESS_DATETIME ,LAST_SOURCE_NME,LAST_TARGET_NME,LAST_MESSAGE ,IS_ACTIVE_IND,CREATED_DTE ,CREATED_BY,LAST_UPDT_DTE ,LAST_UPDT_BY,LAST_ARC_CHG_LOAD_ID)
VALUES(CHG_ID,CHG_OPEN_DATE ,CHG_CLOSE_DATE ,CHG_OWNER ,CHG_DESCRIPTION,LAST_CHG_LOAD_ID ,LAST_STATUS_CODE_VALUE_ID ,LAST_PROCESS_DATETIME ,LAST_SOURCE_NME,LAST_TARGET_NME,LAST_MESSAGE ,IS_ACTIVE_IND,CREATED_DTE ,CREATED_BY,LAST_UPDT_DTE ,LAST_UPDT_BY,LAST_ARC_CHG_LOAD_ID)

;
SET IDENTITY_INSERT CHG.CHANGE_MASTER OFF

END
