CREATE PROCEDURE [AM].[USP_MERGE_FRAMEWORK_CHANGES_AD]
@CHANGE_ID INT,
@CHANGE_LOAD_ID INT
AS

BEGIN 

MERGE INTO AM.ARTIFACT_DEPENDENCY AS target
USING
(SELECT * 
FROM  [AM].[STAGE_ARTIFACT_DEPENDENCY]
 WHERE ART_CTRL_MASTER_ID IN
 (SELECT ART_CTRL_MASTER_ID FROM CHG.STAGE_CHANGE_CONTROL_ARTIFACT 
  WHERE CHG_ID = @CHANGE_ID AND IS_ACTIVE_IND = 1 AND LAST_CHG_LOAD_ID =  @CHANGE_LOAD_ID ) ) AS source
  ON (target.ART_CTRL_MASTER_ID = source.ART_CTRL_MASTER_ID AND target.REFERENCED_CTRL_MASTER_ID = source.REFERENCED_CTRL_MASTER_ID )

  WHEN MATCHED THEN
 UPDATE SET
-- target.ART_CTRL_MASTER_ID = source.ART_CTRL_MASTER_ID,
-- target.REFERENCED_CTRL_MASTER_ID = source.REFERENCED_CTRL_MASTER_ID,
target.LOAD_ID = source.LOAD_ID,
target.DEPENDENCY_TYPE_VALUE_ID = source.DEPENDENCY_TYPE_VALUE_ID,
target.DEPENDENCY_SEQUENCE = source.DEPENDENCY_SEQUENCE,
target.IS_ENABLED_IND  = source.IS_ENABLED_IND ,
target.CREATED_DTE = source.CREATED_DTE,
target.CREATED_BY  = source.CREATED_BY ,
target.LAST_UPDT_DTE = getdate(), --current date
target.LAST_UPDT_BY = CURRENT_USER, -- current user
target.LAST_CHG_LOAD_ID = @CHANGE_LOAD_ID 

WHEN NOT MATCHED BY TARGET THEN        
INSERT(ART_CTRL_MASTER_ID,REFERENCED_CTRL_MASTER_ID,LOAD_ID,DEPENDENCY_TYPE_VALUE_ID,DEPENDENCY_SEQUENCE,IS_ENABLED_IND ,CREATED_DTE,CREATED_BY ,LAST_UPDT_DTE,LAST_UPDT_BY,LAST_CHG_LOAD_ID)
VALUES(ART_CTRL_MASTER_ID,REFERENCED_CTRL_MASTER_ID,LOAD_ID,DEPENDENCY_TYPE_VALUE_ID,DEPENDENCY_SEQUENCE,IS_ENABLED_IND ,GETDATE(),CURRENT_USER ,NULL,NULL,@CHANGE_LOAD_ID)

;

END
